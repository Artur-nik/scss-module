//* Функция возвращения размера контейнера 
@function _grid-result-size-container($media: null){
    //* Возвращает значение $_grid-default-size-container
    @if $media == null {
        @return $_grid-default-size-container;
    }
    //* Если $media была задана:
    @else {
        //* Если переменная $_grid-size-container задана, то возвращаем ее размер на основе контрольных точек из переменной $_grid-breakpoints
        @if variable-exists('_grid-size-container'){
            @return map-get($grid-size-container, $media);
        }
        @else {
            //? Автоматическое создание размера контейнера на основе контрольных точек из переменной $_grid-breakpoints
            //
            @if map-get($_grid-breakpoints, $media) < 700{
                @return round(map-get($_grid-breakpoints, $media) - ($_grid-gutters * 1.2));
            }
            //
            @else if (map-get($_grid-breakpoints, $media) >= 700) and (map-get($_grid-breakpoints, $media) < 960){
                @return round(map-get($_grid-breakpoints, $media) - ($_grid-gutters * 1.6));
            }
            //
            @else if (map-get($_grid-breakpoints, $media) >= 960) and (map-get($_grid-breakpoints, $media) < 1200){
                @return round(map-get($_grid-breakpoints, $media) - ($_grid-gutters * 1.0666667));
            }
            //
            @else if map-get($_grid-breakpoints, $media) >= 1200 {
                @return round(map-get($_grid-breakpoints, $media) - ($_grid-gutters * 2));
            }
        }
    }
}
